[{"C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\index.js":"1","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\App.js":"2","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\SignIn.js":"3","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\Dashboard.js":"4","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\Landing.js":"5","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\components\\NavigationPanel.js":"6","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\status\\Status.js":"7","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\status\\StatusTable.js":"8","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\server-details\\ServerDetails.js":"9","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\server-details\\ServerDetailsTable.js":"10"},{"size":237,"mtime":1609413348275,"results":"11","hashOfConfig":"12"},{"size":424,"mtime":1610125189373,"results":"13","hashOfConfig":"12"},{"size":3272,"mtime":1610143108354,"results":"14","hashOfConfig":"12"},{"size":1069,"mtime":1609911877663,"results":"15","hashOfConfig":"12"},{"size":390,"mtime":1610170205092,"results":"16","hashOfConfig":"12"},{"size":4678,"mtime":1609907165570,"results":"17","hashOfConfig":"12"},{"size":1438,"mtime":1609916215629,"results":"18","hashOfConfig":"12"},{"size":4386,"mtime":1609911972200,"results":"19","hashOfConfig":"12"},{"size":970,"mtime":1609912997661,"results":"20","hashOfConfig":"12"},{"size":2090,"mtime":1609912887816,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1t7u040",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\index.js",[],["48","49"],"C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\App.js",[],"C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\SignIn.js",["50","51"],"import {\r\n  Button,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Logo from \"../assets/images/logo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  headerContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    color: \"black\",\r\n    fontSize: 35,\r\n    fontWeight: \"bold\",\r\n    color: \"#003a76\",\r\n    fontFamily: \"Open Sans Condensed\",\r\n  },\r\n  loginTitle: {\r\n    color: \"black\",\r\n    fontSize: 35,\r\n    fontWeight: \"bold\",\r\n    color: \"#003a76\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Open Sans Condensed\",\r\n  },\r\n  forgotCredentials: {\r\n    color: \"#003a76\",\r\n    textAlign: \"center\",\r\n    cursor: \"pointer\",\r\n    textDecoration: \"underline\",\r\n  },\r\n}));\r\n\r\nfunction SignIn({ setIsUserLoggedIn }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <AppBar style={{ backgroundColor: \"white\" }} position=\"static\">\r\n        <Toolbar style={{ justifyContent: \"space-between\" }}>\r\n          <img src={Logo} alt=\"wooksung_media\" />\r\n          <Typography className={classes.header}>iMentorCenter</Typography>\r\n          <div style={{ width: \"252px\" }}></div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <Grid item container justify=\"center\">\r\n          <Grid item md={3} style={{ marginBottom: \"1em\" }}>\r\n            <Typography className={classes.loginTitle}>LOGIN</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container justify=\"center\">\r\n          <Grid item md={3} style={{ marginBottom: \"1em\" }}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              id=\"filled-basic\"\r\n              label=\"User ID\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container justify=\"center\" style={{ marginBottom: \"1em\" }}>\r\n          <Grid item md={3}>\r\n            <TextField\r\n              fullWidth\r\n              required\r\n              id=\"filled-basic\"\r\n              label=\"Password\"\r\n              variant=\"filled\"\r\n              type=\"password\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container justify=\"center\" style={{ marginBottom: \"1em\" }}>\r\n          <Grid item md={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={() => {\r\n                setIsUserLoggedIn(true);\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container justify=\"center\">\r\n          <Grid item md={3}>\r\n            <Typography className={classes.forgotCredentials}>\r\n              forgot ID / password\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\Dashboard.js",[],"C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\Landing.js",[],"C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\components\\NavigationPanel.js",["52","53","54"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Logo from \"../assets/images/logo.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport cuid from \"cuid\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: 35,\r\n    fontWeight: \"bold\",\r\n    color: \"#003a76\",\r\n    fontFamily: \"Open Sans Condensed\",\r\n  },\r\n  logoutContainer: {\r\n    width: \"252px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nexport default function NavigationPanel({ setIsUserLoggedIn }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [activeOption, setActiveOption] = React.useState(\"\");\r\n  const status = \"administrator\";\r\n  let navigationPanelOptions;\r\n  if (status === \"instructor\") {\r\n    navigationPanelOptions = [\r\n      { name: \"Classroom registration\" },\r\n      { name: \"Usage information\" },\r\n    ];\r\n  } else if (status === \"administrator\") {\r\n    navigationPanelOptions = [\r\n      { name: \"Status\", icon: <TrendingUpIcon />, path: \"/\", id: cuid() },\r\n      {\r\n        name: \"MCU Management\",\r\n        icon: <BuildIcon />,\r\n        path: \"/mcu-management\",\r\n        id: cuid(),\r\n      },\r\n      {\r\n        name: \"User Management\",\r\n        icon: <PeopleIcon />,\r\n        path: \"/user-management\",\r\n        id: cuid(),\r\n      },\r\n      {\r\n        name: \"Statistics\",\r\n        icon: <AssessmentIcon />,\r\n        path: \"/statistics\",\r\n        id: cuid(),\r\n      },\r\n    ];\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar style={{ justifyContent: \"space-between\" }}>\r\n          <img src={Logo} alt=\"wooksung_media\" />\r\n          <Typography className={classes.title}>iMentorCenter</Typography>\r\n          <div className={classes.logoutContainer}>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setIsUserLoggedIn(false);\r\n                history.push(\"/signin\");\r\n              }}\r\n            >\r\n              LogOut\r\n            </Button>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {navigationPanelOptions.map((item) => (\r\n              <ListItem\r\n                onClick={() => setActiveOption(item.path)}\r\n                selected={activeOption === item.path}\r\n                component={Link}\r\n                to={item.path}\r\n                button\r\n                key={item.id}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {[{ name: \"Profile\", icon: <PersonIcon /> }].map((item, index) => (\r\n              <ListItem button key={cuid()}>\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.name} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\status\\Status.js",["55"],"import { Table } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport cuid from \"cuid\";\r\nimport CustomizedTables from \"./StatusTable\";\r\n\r\nfunction Status() {\r\n  const [dummyData, setDummyData] = React.useState([\r\n    { serverName: \"CUOP1\", serverID: \"592651139\", numOfUsers: 1, id: cuid() },\r\n    { serverName: \"CUOP2\", serverID: \"592651138\", numOfUsers: 1, id: cuid() },\r\n    { serverName: \"CUOP3\", serverID: \"592651137\", numOfUsers: 1, id: cuid() },\r\n    { serverName: \"CUOP4\", serverID: \"592651136\", numOfUsers: 1, id: cuid() },\r\n    { serverName: \"CUOP5\", serverID: \"592651135\", numOfUsers: 1, id: cuid() },\r\n    { serverName: \"CUOP6\", serverID: \"592651134\", numOfUsers: 1, id: cuid() },\r\n  ]);\r\n\r\n  function updateServerName(id, newServerName) {\r\n    const updatedDummyData = dummyData.map((item) => {\r\n      if (item.id === id) {\r\n        return {\r\n          ...item,\r\n          serverName: newServerName,\r\n        };\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n\r\n    setDummyData(updatedDummyData);\r\n  }\r\n  const tableHeaders = [\r\n    { columnHeader: \"MCU name\" },\r\n    { columnHeader: \"ID\" },\r\n    { columnHeader: \"Number of users\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <h1>MCU  list</h1>\r\n      <CustomizedTables\r\n        data={dummyData}\r\n        headers={tableHeaders}\r\n        updateServerName={updateServerName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// {data:dummyData, to: '/hhhh'}\r\n\r\nexport default Status;\r\n","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\status\\StatusTable.js",[],["56","57"],"C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\server-details\\ServerDetails.js",["58"],"import React from \"react\";\r\nimport ServerDetailsTable from \"./ServerDetailsTable\";\r\nimport cuid from \"cuid\";\r\n\r\nfunction ServerDetails() {\r\n  const tableHeaders = [\r\n    { columnHeader: \"Room ID\" },\r\n    { columnHeader: \"Start time\" },\r\n    { columnHeader: \"Number of users\" },\r\n  ];\r\n\r\n  const [dummyData, setDummyData] = React.useState([\r\n    { roomID: \"592\", startTime: \"592651139\", numOfUsers: 1, id: cuid() },\r\n    { roomID: \"592\", startTime: \"592651138\", numOfUsers: 1, id: cuid() },\r\n    { roomID: \"592\", startTime: \"592651137\", numOfUsers: 1, id: cuid() },\r\n    { roomID: \"592\", startTime: \"592651136\", numOfUsers: 1, id: cuid() },\r\n    { roomID: \"592\", startTime: \"592651135\", numOfUsers: 1, id: cuid() },\r\n    { roomID: \"592\", startTime: \"592651134\", numOfUsers: 1, id: cuid() },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <h1>MCU details</h1>\r\n      <ServerDetailsTable data={dummyData} headers={tableHeaders} />;\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ServerDetails;\r\n","C:\\Users\\voin\\Desktop\\CUOP\\mentoring-management\\src\\pages\\server-details\\ServerDetailsTable.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":27,"column":5,"nodeType":"65","messageId":"66","endLine":27,"endColumn":10},{"ruleId":"63","severity":1,"message":"64","line":34,"column":5,"nodeType":"65","messageId":"66","endLine":34,"endColumn":10},{"ruleId":"67","severity":1,"message":"68","line":13,"column":8,"nodeType":"69","messageId":"70","endLine":13,"endColumn":17},{"ruleId":"67","severity":1,"message":"71","line":14,"column":8,"nodeType":"69","messageId":"70","endLine":14,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":52,"column":5,"nodeType":"65","messageId":"66","endLine":52,"endColumn":10},{"ruleId":"67","severity":1,"message":"72","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":15},{"ruleId":"59","replacedBy":"73"},{"ruleId":"61","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":12,"column":21,"nodeType":"69","messageId":"70","endLine":12,"endColumn":33},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","no-unused-vars","'InboxIcon' is defined but never used.","Identifier","unusedVar","'MailIcon' is defined but never used.","'Table' is defined but never used.",["76"],["77"],"'setDummyData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]