[{"/root/cuop_internship_v_2/mentoring-management/frontend/src/index.js":"1","/root/cuop_internship_v_2/mentoring-management/frontend/src/App.js":"2","/root/cuop_internship_v_2/mentoring-management/frontend/src/Landing.js":"3","/root/cuop_internship_v_2/mentoring-management/frontend/src/Dashboard.js":"4","/root/cuop_internship_v_2/mentoring-management/frontend/src/context/authContext.js":"5","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/server-details/ServerDetails.js":"6","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/status/Status.js":"7","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/SignIn.js":"8","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/user-management/UserManagement.js":"9","/root/cuop_internship_v_2/mentoring-management/frontend/src/components/NavigationPanel.js":"10","/root/cuop_internship_v_2/mentoring-management/frontend/src/components/RegisterUserDialog.js":"11","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/user-management/UsersTable.js":"12","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/status/StatusTable.js":"13","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/server-details/ServerDetailsTable.js":"14"},{"size":237,"mtime":1610954017503,"results":"15","hashOfConfig":"16"},{"size":2035,"mtime":1610954017503,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1610954017503,"results":"18","hashOfConfig":"16"},{"size":1183,"mtime":1610954017503,"results":"19","hashOfConfig":"16"},{"size":208,"mtime":1610954017503,"results":"20","hashOfConfig":"16"},{"size":940,"mtime":1610954017503,"results":"21","hashOfConfig":"16"},{"size":1388,"mtime":1610954017503,"results":"22","hashOfConfig":"16"},{"size":5044,"mtime":1610955408204,"results":"23","hashOfConfig":"16"},{"size":1943,"mtime":1610954017503,"results":"24","hashOfConfig":"16"},{"size":4671,"mtime":1610954017503,"results":"25","hashOfConfig":"16"},{"size":2778,"mtime":1610954017503,"results":"26","hashOfConfig":"16"},{"size":2714,"mtime":1610954017503,"results":"27","hashOfConfig":"16"},{"size":4260,"mtime":1610954017503,"results":"28","hashOfConfig":"16"},{"size":2020,"mtime":1610954017503,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"793642",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/root/cuop_internship_v_2/mentoring-management/frontend/src/index.js",[],["64","65"],"/root/cuop_internship_v_2/mentoring-management/frontend/src/App.js",[],"/root/cuop_internship_v_2/mentoring-management/frontend/src/Landing.js",[],"/root/cuop_internship_v_2/mentoring-management/frontend/src/Dashboard.js",[],"/root/cuop_internship_v_2/mentoring-management/frontend/src/context/authContext.js",[],"/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/server-details/ServerDetails.js",["66"],"import React from \"react\";\nimport ServerDetailsTable from \"./ServerDetailsTable\";\nimport cuid from \"cuid\";\n\nfunction ServerDetails() {\n  const tableHeaders = [\n    { columnHeader: \"Room ID\" },\n    { columnHeader: \"Start time\" },\n    { columnHeader: \"Number of users\" },\n  ];\n\n  const [dummyData, setDummyData] = React.useState([\n    { roomID: \"592\", startTime: \"592651139\", numOfUsers: 1, id: cuid() },\n    { roomID: \"592\", startTime: \"592651138\", numOfUsers: 1, id: cuid() },\n    { roomID: \"592\", startTime: \"592651137\", numOfUsers: 1, id: cuid() },\n    { roomID: \"592\", startTime: \"592651136\", numOfUsers: 1, id: cuid() },\n    { roomID: \"592\", startTime: \"592651135\", numOfUsers: 1, id: cuid() },\n    { roomID: \"592\", startTime: \"592651134\", numOfUsers: 1, id: cuid() },\n  ]);\n\n  return (\n    <>\n      <h1>MCU details</h1>\n      <ServerDetailsTable data={dummyData} headers={tableHeaders} />\n    </>\n  );\n}\n\nexport default ServerDetails;\n","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/status/Status.js",["67"],"import { Table } from \"@material-ui/core\";\nimport React from \"react\";\nimport cuid from \"cuid\";\nimport CustomizedTables from \"./StatusTable\";\n\nfunction Status() {\n  const [dummyData, setDummyData] = React.useState([\n    { serverName: \"CUOP1\", serverID: \"592651139\", numOfUsers: 1, id: cuid() },\n    { serverName: \"CUOP2\", serverID: \"592651138\", numOfUsers: 1, id: cuid() },\n    { serverName: \"CUOP3\", serverID: \"592651137\", numOfUsers: 1, id: cuid() },\n    { serverName: \"CUOP4\", serverID: \"592651136\", numOfUsers: 1, id: cuid() },\n    { serverName: \"CUOP5\", serverID: \"592651135\", numOfUsers: 1, id: cuid() },\n    { serverName: \"CUOP6\", serverID: \"592651134\", numOfUsers: 1, id: cuid() },\n  ]);\n\n  function updateServerName(id, newServerName) {\n    const updatedDummyData = dummyData.map((item) => {\n      if (item.id === id) {\n        return {\n          ...item,\n          serverName: newServerName,\n        };\n      } else {\n        return item;\n      }\n    });\n\n    setDummyData(updatedDummyData);\n  }\n  const tableHeaders = [\n    { columnHeader: \"MCU name\" },\n    { columnHeader: \"ID\" },\n    { columnHeader: \"Number of users\" },\n  ];\n\n  return (\n    <>\n      <h1>MCU  list</h1>\n      <CustomizedTables\n        data={dummyData}\n        headers={tableHeaders}\n        updateServerName={updateServerName}\n      />\n    </>\n  );\n}\n\n// {data:dummyData, to: '/hhhh'}\n\nexport default Status;\n","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/SignIn.js",["68","69"],"/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/user-management/UserManagement.js",["70","71"],"import React from \"react\";\nimport cuid from \"cuid\";\nimport UsersTable from \"./UsersTable\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport RegisterUserDialog from \"../../components/RegisterUserDialog\";\n\nfunction UserManagement() {\n  const [isOpenRegisterDialog, setIsOpenRegisterDialog] = React.useState(false);\n  const [dummyData, setDummyData] = React.useState([\n    {\n      personalId: \"59ad5139sa\",\n      name: \"John Park\",\n      type: \"teacher\",\n      subjectName: \"English\",\n      contactInfo: \"010-1234-5678\",\n    },\n    {\n      personalId: \"59as5152sa\",\n      name: \"July Park\",\n      type: \"business-manager\",\n      subjectName: \"Math\",\n      contactInfo: \"010-1234-5678\",\n    },\n    {\n      personalId: \"5ass5152sa\",\n      name: \"Jonas Kim\",\n      type: \"business-manager\",\n      subjectName: \"Math\",\n      contactInfo: \"010-1234-5678\",\n    },\n  ]);\n\n  const tableHeaders = [\n    { columnHeader: \"Personal ID\" },\n    { columnHeader: \"Name\" },\n    { columnHeader: \"Type\" },\n    { columnHeader: \"Subject Name\" },\n    { columnHeader: \"Contact Info\" },\n    { columnHeader: \"Delete\" },\n  ];\n\n  function handeRegisterDialogClose() {\n    setIsOpenRegisterDialog(false);\n  }\n  return (\n    <div container>\n      <Grid item container style={{ marginBottom: \"30px\" }} justify=\"flex-end\">\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            // className={classes.button}\n            onClick={() => {\n              setIsOpenRegisterDialog(true);\n            }}\n            startIcon={<PersonAddIcon />}\n          >\n            register user\n          </Button>\n        </Grid>\n      </Grid>\n      <RegisterUserDialog\n        open={isOpenRegisterDialog}\n        handleClose={handeRegisterDialogClose}\n      />\n      <UsersTable headers={tableHeaders} data={dummyData} />\n    </div>\n  );\n}\n\nexport default UserManagement;\n","/root/cuop_internship_v_2/mentoring-management/frontend/src/components/NavigationPanel.js",["72","73","74"],"import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { Button } from \"@material-ui/core\";\nimport Logo from \"../assets/images/logo.png\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport cuid from \"cuid\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport BuildIcon from \"@material-ui/icons/Build\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport { AuthContext } from \"../context/authContext\";\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: \"white\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  title: {\n    color: \"black\",\n    fontSize: 35,\n    fontWeight: \"bold\",\n    color: \"#003a76\",\n    fontFamily: \"Open Sans Condensed\",\n  },\n  logoutContainer: {\n    width: \"252px\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nexport default function NavigationPanel({ setIsUserLoggedIn }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n\n  const [activeOption, setActiveOption] = React.useState(\"\");\n  const status = \"administrator\";\n  let navigationPanelOptions;\n  if (status === \"instructor\") {\n    navigationPanelOptions = [\n      { name: \"Classroom registration\" },\n      { name: \"Usage information\" },\n    ];\n  } else if (status === \"administrator\") {\n    navigationPanelOptions = [\n      { name: \"Status\", icon: <TrendingUpIcon />, path: \"/\", id: cuid() },\n      {\n        name: \"MCU Management\",\n        icon: <BuildIcon />,\n        path: \"/mcu-management\",\n        id: cuid(),\n      },\n      {\n        name: \"User Management\",\n        icon: <PeopleIcon />,\n        path: \"/user-management\",\n        id: cuid(),\n      },\n      {\n        name: \"Statistics\",\n        icon: <AssessmentIcon />,\n        path: \"/statistics\",\n        id: cuid(),\n      },\n    ];\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar style={{ justifyContent: \"space-between\" }}>\n          <img src={Logo} alt=\"wooksung_media\" />\n          <Typography className={classes.title}>iMentorCenter</Typography>\n          <div className={classes.logoutContainer}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                // setIsUserLoggedIn(false);\n                auth.logout();\n                history.push(\"/signin\");\n              }}\n            >\n              LogOut\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            {navigationPanelOptions.map((item) => (\n              <ListItem\n                onClick={() => setActiveOption(item.path)}\n                selected={activeOption === item.path}\n                component={Link}\n                to={item.path}\n                button\n                key={item.id}\n              >\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.name} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {[{ name: \"Profile\", icon: <PersonIcon /> }].map((item, index) => (\n              <ListItem button key={cuid()}>\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.name} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n    </div>\n  );\n}\n","/root/cuop_internship_v_2/mentoring-management/frontend/src/components/RegisterUserDialog.js",[],"/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/user-management/UsersTable.js",["75","76","77","78","79","80","81","82","83"],"import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport cuid from \"cuid\";\nimport { IconButton, Input, InputAdornment, Tooltip } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { Link } from \"react-router-dom\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function UsersTable({ data, headers, updateServerName }) {\n  // {data:dummyData, to: '/hhhh'}\n  //const { data } = props;\n  //const data = props.data;\n\n  const classes = useStyles();\n  const [editCellID, setEditCellID] = React.useState(\"\");\n  const [cellInput, setCellInput] = React.useState(\"\");\n\n  return (\n    <TableContainer component={Paper}>\n      <Table\n        className={classes.table}\n        aria-label=\"customized table\"\n        size=\"small\"\n      >\n        <TableHead>\n          <TableRow>\n            {headers.map((item) => {\n              return (\n                <StyledTableCell align=\"left\" key={cuid()}>\n                  {item.columnHeader}\n                </StyledTableCell>\n              );\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((item) => (\n            <StyledTableRow key={cuid()}>\n              <StyledTableCell align=\"left\">{item.personalId}</StyledTableCell>\n              <StyledTableCell align=\"left\">{item.name}</StyledTableCell>\n              <StyledTableCell align=\"left\">{item.type}</StyledTableCell>\n              <StyledTableCell align=\"left\">{item.subjectName}</StyledTableCell>\n              <StyledTableCell align=\"left\">{item.contactInfo}</StyledTableCell>\n              <StyledTableCell align=\"left\">\n                <IconButton aria-label=\"delete\">\n                  <DeleteIcon />\n                </IconButton>\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/status/StatusTable.js",[],"/root/cuop_internship_v_2/mentoring-management/frontend/src/pages/server-details/ServerDetailsTable.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":12,"column":21,"nodeType":"90","messageId":"91","endLine":12,"endColumn":33},{"ruleId":"88","severity":1,"message":"92","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":30,"column":5,"nodeType":"95","messageId":"96","endLine":30,"endColumn":10},{"ruleId":"93","severity":1,"message":"94","line":37,"column":5,"nodeType":"95","messageId":"96","endLine":37,"endColumn":10},{"ruleId":"88","severity":1,"message":"97","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":12},{"ruleId":"88","severity":1,"message":"89","line":10,"column":21,"nodeType":"90","messageId":"91","endLine":10,"endColumn":33},{"ruleId":"88","severity":1,"message":"98","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":17},{"ruleId":"88","severity":1,"message":"99","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":53,"column":5,"nodeType":"95","messageId":"96","endLine":53,"endColumn":10},{"ruleId":"88","severity":1,"message":"100","line":11,"column":22,"nodeType":"90","messageId":"91","endLine":11,"endColumn":27},{"ruleId":"88","severity":1,"message":"101","line":11,"column":29,"nodeType":"90","messageId":"91","endLine":11,"endColumn":43},{"ruleId":"88","severity":1,"message":"102","line":11,"column":45,"nodeType":"90","messageId":"91","endLine":11,"endColumn":52},{"ruleId":"88","severity":1,"message":"103","line":12,"column":8,"nodeType":"90","messageId":"91","endLine":12,"endColumn":17},{"ruleId":"88","severity":1,"message":"104","line":13,"column":10,"nodeType":"90","messageId":"91","endLine":13,"endColumn":14},{"ruleId":"88","severity":1,"message":"105","line":46,"column":10,"nodeType":"90","messageId":"91","endLine":46,"endColumn":20},{"ruleId":"88","severity":1,"message":"106","line":46,"column":22,"nodeType":"90","messageId":"91","endLine":46,"endColumn":35},{"ruleId":"88","severity":1,"message":"107","line":47,"column":10,"nodeType":"90","messageId":"91","endLine":47,"endColumn":19},{"ruleId":"88","severity":1,"message":"108","line":47,"column":21,"nodeType":"90","messageId":"91","endLine":47,"endColumn":33},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'setDummyData' is assigned a value but never used.","Identifier","unusedVar","'Table' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","'cuid' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Input' is defined but never used.","'InputAdornment' is defined but never used.","'Tooltip' is defined but never used.","'CheckIcon' is defined but never used.","'Link' is defined but never used.","'editCellID' is assigned a value but never used.","'setEditCellID' is assigned a value but never used.","'cellInput' is assigned a value but never used.","'setCellInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]